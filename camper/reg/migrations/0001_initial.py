# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-06 05:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import django_extras.db.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sked', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CouponCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('discount', django_extras.db.models.fields.PercentField(default=100)),
                ('max_tickets', models.IntegerField(help_text='How many tickets to allow to obtain this discount; 0 indicates unlimited tickets.')),
                ('is_staff', models.BooleanField(default=False, help_text='Indicates that people that use this code are staff; has no real effect but is useful for tabulating.')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField(blank=True)),
                ('last_name', models.TextField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address1', models.TextField(blank=True)),
                ('address2', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('zip', models.CharField(blank=True, max_length=255)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20)),
                ('payment_type', models.CharField(blank=True, choices=[('none', 'No payment'), ('online_credit', 'Online credit card payment'), ('onsite_credit', 'Onsite credit card payment'), ('onsite_cash', 'Onsite cash payment')], default='online_credit', max_length=255)),
                ('transaction_id', models.CharField(blank=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=False)),
                ('coupon_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reg.CouponCode')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', django_extensions.db.fields.PostgreSQLUUIDField(blank=True, db_index=True, editable=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('organization', models.CharField(blank=True, max_length=255)),
                ('twitter', models.CharField(blank=True, max_length=127, verbose_name='Twitter Handle')),
                ('website', models.CharField(blank=True, max_length=255)),
                ('diet_vegetarian', models.BooleanField(default=False, verbose_name='Vegetarian')),
                ('diet_vegan', models.BooleanField(default=False, verbose_name='Vegan')),
                ('diet_gluten_free', models.BooleanField(default=False, verbose_name='Gluten-free')),
                ('diet_allergies', models.BooleanField(default=False, verbose_name='Allergies')),
                ('diet_allergies_desc', models.TextField(blank=True, verbose_name='Description (allergies)')),
                ('diet_other', models.BooleanField(default=False, verbose_name='Other dietary needs')),
                ('diet_other_desc', models.TextField(blank=True, verbose_name='Description (other dietary needs)')),
                ('attend_day1', models.BooleanField(default=True, verbose_name='Friday')),
                ('attend_day2', models.BooleanField(default=True, verbose_name='Saturday')),
                ('lobby_day', models.BooleanField(default=False, verbose_name="Do you plan to attend the Sunlight Network's Lobby Day?")),
                ('ambassador_program', models.CharField(choices=[('no', 'No thank you'), ('new', "Yes, I'm a new attendee and would like to be paired with an ambassador."), ('vet', 'Yes, I would like to be an ambassador, and welcome new members of our community.'), ('maybe', 'Maybe; please keep me informed.')], default='no', max_length=12, verbose_name='Would you like to be part of the TCamp Ambassador Program?')),
                ('subscribe', models.BooleanField(default=False, verbose_name='Please subscribe me to emails from the Sunlight Foundation')),
                ('success', models.BooleanField(db_index=True, default=False)),
                ('checked_in', models.DateTimeField(default=None, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Event')),
                ('sale', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reg.Sale')),
            ],
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('expires', models.DateTimeField(null=True)),
                ('max_tickets', models.PositiveIntegerField(help_text='How many tickets of this type to sell; 0 indicates unlimited tickets.')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('enabled', models.BooleanField(default=False)),
                ('position', models.PositiveIntegerField(default=0)),
                ('online', models.BooleanField(default=True)),
                ('onsite', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sked.Event')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reg.TicketType'),
        ),
    ]
