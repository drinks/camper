# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-06 05:07
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(help_text='Will not be published.', max_length=75)),
                ('upvotes', models.PositiveIntegerField(default=0)),
                ('downvotes', models.PositiveIntegerField(default=0)),
                ('score', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('-score', '-upvotes', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Subsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(help_text='The url fragment where the site\n                                         will be mounted. Omit leading\n                                         and trailing slashes.')),
                ('description', models.TextField()),
                ('scoring_algorithm', models.IntegerField(choices=[(0, 'Total Score'), (1, 'Frecency')], default=0)),
                ('post_status', models.IntegerField(choices=[(0, 'Allow All Posts'), (1, 'Require Login'), (2, 'Allow No Posts')], default=0)),
                ('voting_status', models.IntegerField(choices=[(0, 'Not Yet Open'), (1, 'Open'), (2, 'Closed')], default=0)),
                ('theme', models.CharField(help_text='name of base theme template', max_length=100)),
                ('idea_label', models.CharField(default='idea', help_text='The lowercase name by which ideas are referenced in this subsite.', max_length=128)),
                ('ideas_per_page', models.IntegerField(default=10)),
                ('upvote_label', models.CharField(default='Vote Up', help_text='The text of the button to upvote. HTML allowed.', max_length=255)),
                ('upvotes_label', models.CharField(blank=True, default='{} Up', help_text="The text of the indicator of the current number of upvotes. '{}' will be substituted with the number. HTML allowed.", max_length=255)),
                ('allow_downvote', models.BooleanField(default=True)),
                ('downvote_label', models.CharField(default='Vote Down', help_text='The text of the button to downvote. HTML allowed.', max_length=255)),
                ('downvotes_label', models.CharField(blank=True, default='{} Down', help_text="The text of the indicator of the current number of downvotes. '{}' will be substituted with the number. HTML allowed.", max_length=255)),
                ('voted_label', models.CharField(default='Clear Vote', help_text='HTML allowed.', max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('idea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='brainstorm.Idea')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idea_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
        migrations.AddField(
            model_name='idea',
            name='subsite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ideas', to='brainstorm.Subsite'),
        ),
        migrations.AddField(
            model_name='idea',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ideas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together=set([('user', 'idea')]),
        ),
    ]
